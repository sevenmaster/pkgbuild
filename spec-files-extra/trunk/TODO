usage: no ChangeLog for this TODO file needed. Just edit and commit with a very short note, e.g. solved 2) short_issue, added 5) pnm for perl5.x.x

*YOU* do this:  svn up TODO, make your changes, then immediately commit with 
    echo "TODO: added 67) headsup-mini-description" | svn commit -F - TODO

1)
SFEhplip.spec: pnm_macros for SFEcups/SUNWcups, SFEsane-backends/SUNWsanebackends/SUNWsanebackendu, eventually python version macro 2.4/2.6

2)
SFErsnapshot.spec: pnm_macros for SUNWsshu
SFEsmf-grey.spec:  pnm_macros for SUNWsndm* / sendmail
SFEwine.spec: pnm_macros for audio headers

3)
SFEp7zip.spec: check saprc build, especially enianness (old patch p7zip-01-makefile.diff)


4)
all spec files using renamed / removed / added packages: search for packages
which can make use of pnm_macros by:
for package in openssl gnu-dbm gdbm pigment libmikmod fftw4 sane-backend system/header sfwhea$ hea$ ghostscript Gtk wget gtk1 python26 python-gnome-libs perl5
  do
  egrep -n "^Requires.* (/|SUNW|SFE).*$package" *spec base-specs/*spec experimental/*spec
  done
notes: with perl5 you might need to change other paths in the spec as well

5)
write pnm_macros to get perl584 or perl510 or other future versions properly (Build)Required or paths like /usr/perl5/vendor_perl/5[.8.4|.10|...) properly setup
20110618 update: basic functionality is now there, please test your personal SFEperl-<module> now (Osol134, OI, S11Express)

6)
#updated once Solaris 11 Express build is out delivering a new perl version, check + adjust
#updated the build-number and remove corresponding ##TODO## in include/packagenames.define.allbuilds.inc
testing now Solaris 11 (Express) Build >= 166 to use perl-512

7)
need one general license file for "perl" licensed packages. all specs can point to that file with SUNW_Copyright:

8)
add to SFEperl-* modules hierarchical package names as well. maintain old short SVR4 name as package alias.
see experimental/make_perl_cpan_settings.pl to get an idea about what the hierarchical package name might be.

9)
lengthy+high_quality description: http://gcc.gnu.org/ml/gcc-patches/2010-01/msg01300.html
and maybe
http://comments.gmane.org/gmane.comp.gcc.devel/111431

see if SFEgcc can avoid forcing the linker to be the gnu ld. suggested by richlowe is https://github.com/mirrors/gcc/commit/ce72f71213f2d4c75e3e82b6524e477d0e743ec5 
this would enable sun ld even on OI147.
check if this fix is already in the %version of gcc we have now (4.5.3).

10)
think on _default macro to point to Python 2.4 or 2.6 or whatever future version is in a Distribution
pnm_buildrequires_perl_default requires_perl_default      (early stage, testing)
pnm_buildrequires_python_default requires_python_default  (not yet there, which other parameters needed)

11)
SFEstellarium-gpp.spec ### NOTE ### (Alex Viskovatoff>
 ###
 ### The only way I can get this to link successfully is to remove
 ### libgcc_s.so* and libstdc++.* from /usr/sfw/lib while building.

12)
gnu style find. think on a pnm_macro to get this into /usr/gnu/bin/ dependent on the
distro and osbuild (use case is e.g. SFExerces-c-gpp.spec/SFExerxes-c.spec base-specs/xerces-c.spec)


13)
verify this usage hint: if C++ libraries are to be placed in other _basedir:
It might be that _basedir=/usr/g++ is on some cases not set early enough or in the wrong order.
Only _prefix get's set, except you again include base.inc like that
%include Solaris.inc
%define _basedir /usr/g++
%include base.inc
/usr/g++/bin
/usr/g++/lib.
...

14)
re-visit dependencies on other perl modules and make them (Build)Requires in those spec files: SFEperl-net-dns.spec SFEperl-mail-spf.spec

15) packages should record dependencies needed to work
check dependencies on SFEgcc* for SFEkchmviewer.spec, ...
check dependencies on "at least" the gcc runtime runtime-libraries. Programs 
and other libs may rely on e.g. SFEgccruntime and other libs.
*verify* that gcc-runtime-libraries are searched in the right place, /usr/gnu/,
if they are independent of the exact gcc-compiler version.

16)
make up a file or a wiki page with current notes like "deprecated" and "recommeded"
collect topics here:
  deprecated: CC=gcc   recommended: CC=/usr/gnu/bin/gcc  or CC=/usr/sfw/bin/gcc (reason: on fresh builds PATH=/usr/ccs/bin:/usr/gnu/bin gets you the gcc-3.x.x version *unwanted*)

  recommended: use in all FLAGS the macros:  CFLAGS="%{_optflags}" LDFLAGS=...  CXXFLAGS=... (reason: a lot)

  deprecated: use of build specifiy package names. recommended: use of packagenamemacros.inc (reason: perl-584/perl-510/SUNWperl584core -> different directories vendor_perl/<5.8.4|5.10|5.12.3>

17)
SFEqt47-gpp.spec:
searching idea how to dynamicly start vncserver and later on explicitly kill this instand. shoul dnot interfere with other vncserver already running on this system (mind: non-global-zones as well)


18)
packagenamemacros.inc - maybe add a rule for libpng14 (older builds don't have that new version, may need SFE png as replacement)
packagenamemacros.inc - handle osbuild dependend to graphviz_default to be SUNWgraphviz or SFEgraphviz

19)
commit files delete in gmpc-plugins/ which already have moved into trunk/

20)
implement a compiler check on gcc being gcc 4.x.x and not old gcc 3.x.x . Could be placed in a central include file.
prevent users from accidentially using /usr/gnu/bin/gcc being 3.x.x instead of 4.x.x .

21)
think on include files modeled after usr-gnu.in to define library variants (g++/SunStudio, stdcxx, stdc++, ...)
names could be usr-stdcxx.inc, usr-stdc++.inc, usr-stlport4.inc, usr-g++.inc
note: should eliminate the old path /%_prefix/lib/g++/%_gpp_version
note: might need changes in the regular include files as well (think hard before changing them)
make usage note on the wiki and enter wiki url into the include file

22)
package wish list
SFEmpack (see spec-files-jucr/specs/mpack.spec, clear dependencies)  #easy-jucr

23)
check dependencies on mysql for SFEfreeradius.spec (pnm_macros? somthing like pnm_mysql_default)

24)
pkgbuild.wiki.sourcefore.net: add implementation note for SFE maintainers to 
check the search order be /usr/g++/lib then all others like /usr/lib and /usr/gnu/lib

25)
add helper script to do this at the end of a pkgtool run as the last line in 
section %install: use env info and read 
/var/tmp/pkgbuild-$LOGNAME/<packagename>/*all*those*files*and*dirs*
print-out a nice %files section with all the well-known-defaults which can then
be included into the new spec file with the previously empty %files section.
The user just re-runs the pkgbuild --short-circuit -bb SFEpackagename to see 
if files are nicely catched. Eliminates / reduced the great try+error cycles
when defining %files
eventually "pkg" has a nice list of defaults in the code, else assemble from
man filesystem or existing spec files

26)
SFEqt-gpp.spec - test QT itself for working properly (low priority)
- re-visit package dependency with check-deps, add (Build)Requires if needed 
- examine runtime library paths created by patched/unpached SFEgcc, especially
  /usr/g++/lib appearing early - just to be sure (med priority)

29)
Requires: SUNWgnome-python26-libs - check if this could be done similar to 
pnm_python_default. Could be used by SFEpessulus.spec and possibly others
SFEpygoocanvas.spec SFEsabayon.spec

30)
SFEtransmageddon.spec: use pnm_python_default  and *test* if it works

#resolved# 31)
#resolved# SFEqt-gpp.spec -> Qt*pc wrong setting mysql: Libs.private: -L/usr/gnu/lib -L/usr/g++/{mysql/5.1/lib}  ...

32)
check for identical/alias packages in SFE which have similar *new* packages in SUNW, create pnm_macro rules for them
SFEaalib (1.4.0 1.4rc5) SUNWaalib library/aalib@1.4.5

33)
pkgbuild.wiki: Review lonely pages in draft status and enhance them, link them:
https://sourceforge.net/apps/mediawiki/pkgbuild/index.php?title=Special:LonelyPages

34)
bug: %define _gpp is used to find the right runtime libs, this is pointing to 
non-existing directory in some cases
include/base.inc, include/arch64.inc, %if cc_is_gcc equals 1
 %define _gpp_version %(%{?_gpp:%_gpp}%{!?_gpp:g++} --version | head -1 | cut -f3 -d' ')
 %define _cxx_libdir        %{_prefix}/lib/g++/%{_gpp_version}
checks: _prefix can be set to /usr or to /usr/gnu .
our g++ lives for gcc 3.x in place A and for SFEgcc 4.x.x in place B

35)
reverse SFEgccruntime and SFEgcc to make pkgtool --autodeps find the spec file providing the runtime
remove intermediate symlink SFEgccruntime.spec -> SFEgcc.spec

36)
make these spec files dual 32/64 bit:
  SFEqt-gpp (cost: somewhat larger)  (owner:  TBD, volunteers?)
 
37) 
overhaul SFEphp*spec. base pacakge and extensions, get base and extensions in 
sync, version bump, use pnm_macros ( change database/postgres-90/library, 
database/postgres-90/developer SUNWphp52r SUNWphp52u ) Note: postgres base
package name and spec-filename should read: SFE or SUNWpostgr-90 like the
older versions did. IPS name set with IPS_package_name: database/postgres-90 ... )

38)
postgres*.spec make SVR4 ready (Solaris 10) and provide IPS package names
with IPS_package_name: database/postgres-90 ... 
would it make sense to keep subpackages in sync with SUNWpostgr-84(-****) ?
use pnm_macros for dependencies which aren't recoded with legacy
SUNWpackagename in IPS repositories of OI or Solaris 11 (Express)

39)
make new SFElv2.spec http://lv2plug.in http://lv2plug.in/spec/
make new SFElv2-swh-plugins.spec - find tarball / calculate package version
     number from e.g. git checkout_number. use e.g. 0.0.<calced_number>   https://github.com/swh/lv2

40)
test some stacks of spec files with the SFEgcc-runpath.spec experimental compiler,
this should result in gcc compiled packages using libgcc_s.so.1 and libstdc++.so.6
from /usr/gcc/4.6/lib/* or fallback shared directory /usr/gcc/lib
dump -Lv <binary|library.so.n> print RUNPATH /usr/gcc/4.6/lib:/usr/gcc/lib first
ldd <binary|library.so.n> no unresolved dependencies on libs and gcc runtime from /usr/gcc/4.6/lib

41)
check if those package should better go to /usr/gnu, remember checking other packages
to still find those packages in the new location:
SFEwxwidgets: The following packages all deliver file actions to usr/include/wx-2.8/wx/dir.h:
  pkg://localhost/SFEwxwidgets@2.8.10,5.11-0.170:20110921T212701Z
  pkg://solaris/library/graphics/wxwidgets@2.8.12,5.11-0.172:20110815T100013Z

