#!/bin/ksh
#needs ksh for test -O

. /lib/svc/share/smf_include.sh

getprop() {
    PROPVAL=""
    svcprop -q -p $1 ${SMF_FMRI}
    if [ $? -eq 0 ] ; then
        PROPVAL=`svcprop -p $1 ${SMF_FMRI}`
        if [ "${PROPVAL}" = "\"\"" ] ; then
            PROPVAL=""
        fi
        return
    fi
    return
}

getprop application/config_file
if [ "${PROPVAL}" != "" ] ; then
 #find user setting and strip whitespace from beginning and end of username
 #RUNUSER=`/usr/bin/egrep "^\s*user.*=" ${PROPVAL} | /usr/bin/sed -e 's/^.*user.*?=[ 	]*//' -e 's/[ 	]*$//'`
 #find user setting and let variable assignment strip whitespace from beginning and end of username
 SMF_START_RUNUSER=`/usr/bin/egrep "^\s*user.*=" ${PROPVAL} | tail -1 | /usr/bin/sed -e 's/^.*user.*=[ 	]*//' -e 's/[ 	]*$//'`
 export SMF_START_RUNUSER
echo ">${SMF_START_RUNUSER}<"
 #sanity checks: config file should be owned by root who runs this script
 # *or* by the runuser specified as the "user =" in the configfile itself
 # (protect chmod in start section)
##TODO## insert a check on "this file "${PROPVAL}" is owned by the userid ${SMF_START_RUNUSER}
#        instead of fixed asking if "freerad" owns that file
CONFIIGFILEOWENDBYUSER=`/usr/bin/ls -l ${PROPVAL} | cut -d ' ' -f5` 
 [ -O "${PROPVAL}" -o "${SMF_START_RUNUSER}" == "${CONFIIGFILEOWENDBYUSER}" ] || SMF_START_RUNUSER=""
fi

getprop config/debug
debug=${PROPVAL}

case "$1" in
'start')

        [ -d /var/run/radiusd ] || mkdir /var/run/radiusd || exit 1

        ##TODO## improvement: Might only set owner for the directory if not owned by freeradius runuser.
        #for now set the owner if the directory is owened by root, who runs this script
        [ -n "${SMF_START_RUNUSER}" -a -d /var/run/radiusd -a -O /var/run/radiusd ] && chown ${SMF_START_RUNUSER} /var/run/radiusd;

	if [ "x$debug" = "xtrue" ]; then
	   /usr/sbin/radiusd -X &
        else
	   /usr/sbin/radiusd &
        fi

	;;

'stop')
	PIDFILE=/var/run/radiusd/radiusd.pid 
	if test '!' -f $PIDFILE ; then
	        echo "$PIDFILE doesn't exist, perhaps freeradius radiusd isn't running"
	        exit 1
	fi
	# exec the kill to get the correct return code
	exec kill -TERM `cat $PIDFILE`
	;;

*)
	echo "Usage: $0 { start | stop }"
	exit 1
	;;
esac

exit $SMF_EXIT_OK
