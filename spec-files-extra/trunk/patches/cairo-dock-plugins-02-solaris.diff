--- cairo-dock-plugins-2.2.0-4/GMenu/src/applet-run-dialog.c	2010-10-02 00:42:14.000000000 +0200
+++ cairo-dock-plugins-2.2.0-4-patch/GMenu/src/applet-run-dialog.c	2011-02-20 17:02:37.663012082 +0100
@@ -62,11 +62,7 @@
 		
 		suffix = NULL;
 		if (
-		/* don't use g_file_test at first so we don't stat() */
-		    dent->d_type == DT_DIR ||
-		    (dent->d_type == DT_LNK &&
-		     g_file_test (file, G_FILE_TEST_IS_DIR))
-			//g_file_test (file, G_FILE_TEST_IS_DIR)
+			g_file_test (file, G_FILE_TEST_IS_DIR)
 		   )
 			suffix = "/";
 		
--- cairo-dock-plugins-2.2.0-4/mail/src/CMakeLists.txt	2010-10-02 00:42:12.000000000 +0200
+++ cairo-dock-plugins-2.2.0-4-patch/mail/src/CMakeLists.txt	2011-02-20 17:07:51.319858503 +0100
@@ -18,7 +18,7 @@
 add_library(${PACKAGE_MAIL} SHARED ${cd-mail_LIB_SRCS})
 
 ########### compil ###############
-add_definitions (-D_POSIX_SOURCE=1 -DHAVE_SSL_SUPPORT=1)
+add_definitions (-D_XOPEN_SOURCE=600 -DHAVE_SSL_SUPPORT=1)
 add_definitions (-DMY_APPLET_SHARE_DATA_DIR="${maildatadir}")
 add_definitions (-DMY_APPLET_PREVIEW_FILE="preview.jpg")
 add_definitions (-DMY_APPLET_CONF_FILE="mail.conf")
--- cairo-dock-plugins-2.2.0-4/shortcuts/src/applet-disk-usage.c	2010-10-02 00:42:16.000000000 +0200
+++ cairo-dock-plugins-2.2.0-4-patch/shortcuts/src/applet-disk-usage.c	2011-02-20 17:33:12.715264925 +0100
@@ -17,11 +17,12 @@
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <stdio.h>
 #include <string.h>
-#include <mntent.h>
 #include <sys/types.h>
-#include <sys/statfs.h>
-#include <mntent.h>
+#include <sys/statvfs.h>
+#include <sys/mntent.h>
+#include <sys/mnttab.h>
 #include <math.h>
 
 #include <cairo-dock.h>
@@ -32,14 +33,12 @@
 
 void cd_shortcuts_get_fs_stat (const gchar *cDiskURI, CDDiskUsage *pDiskUsage)
 {
-	static struct statfs sts;
+	static struct statvfs sts;
 	const gchar *cMountPath = (strncmp (cDiskURI, "file://", 7) == 0 ? cDiskURI + 7 : cDiskURI);
 	//g_print ("checking device on '%s'...\n", cMountPath);
 	
-	if (statfs (cMountPath, &sts) == 0)
+	if (statvfs (cMountPath, &sts) == 0)
 	{
-		if (pDiskUsage->iType == 0)
-			pDiskUsage->iType = sts.f_type;
 		pDiskUsage->iAvail = (long long)sts.f_bavail * sts.f_bsize;  // Blocs libres pour utilisateurs
 		pDiskUsage->iFree  = (long long)sts.f_bfree  * sts.f_bsize;  // Blocs libres
 		pDiskUsage->iTotal = (long long)sts.f_blocks * sts.f_bsize;  // Nombre total de blocs
@@ -160,8 +159,8 @@
 static void _cd_shortcuts_get_fs_info (const gchar *cDiskURI, GString *sInfo)
 {
 	const gchar *cMountPath = (strncmp (cDiskURI, "file://", 7) == 0 ? cDiskURI + 7 : cDiskURI);
-	struct mntent *me;
-	FILE *mtab = setmntent ("/etc/mtab", "r");
+	struct mnttab *me;
+	FILE *mtab = fopen ("/etc/mnttab", "r");
 	char *search_path;
 	int match;
 	char *slash;
@@ -173,22 +172,20 @@
 	}
 	
 	gchar *cFsInfo = NULL;
-	while ((me = getmntent (mtab)) != NULL)
+	while (getmntent (mtab, me) == 0)
 	{
-		if (me->mnt_dir && strcmp (me->mnt_dir, cMountPath) == 0)
+		if (me->mnt_mountp && strcmp (me->mnt_mountp, cMountPath) == 0)
 		{
 			g_string_append_printf (sInfo, "Mount point : %s\nFile system : %s\nDevice : %s\nMount options : %s",
-				me->mnt_dir,
-				me->mnt_type,
-				me->mnt_fsname,
-				me->mnt_opts);
-			if (me->mnt_freq != 0)
-				g_string_append_printf (sInfo, "\nBackup frequency : %d days", me->mnt_freq);
+				me->mnt_mountp,
+				me->mnt_fstype,
+				me->mnt_special,
+				me->mnt_mntopts);
 			break ;
 		}
 	}
 	
-	endmntent (mtab);
+	fclose (mtab);
 }
 
 gchar *cd_shortcuts_get_disk_info (const gchar *cDiskURI, const gchar *cDiskName)
