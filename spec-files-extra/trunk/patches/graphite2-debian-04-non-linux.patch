--- ./src/CMakeLists.txt.orig
+++ ./src/CMakeLists.txt
@@ -110,7 +110,7 @@ else (${CMAKE_BUILD_TYPE} STREQUAL "Clan
     set(GRAPHITE_LINK_FLAGS "")
 endif (${CMAKE_BUILD_TYPE} STREQUAL "ClangASN")
 
-if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
     set_target_properties(graphite2 PROPERTIES 
         COMPILE_FLAGS   "-Wall -Wextra -Wno-unknown-pragmas -Wendif-labels -Wshadow -Wctor-dtor-privacy -Wnon-virtual-dtor -fno-rtti -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -fno-stack-protector"
         LINK_FLAGS      "-nodefaultlibs ${GRAPHITE_LINK_FLAGS}" 
@@ -128,7 +128,7 @@ if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linu
     endif (${CMAKE_CXX_COMPILER} MATCHES  ".*mingw.*")
     set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "")
     CREATE_LIBTOOL_FILE(graphite2 "/lib${LIB_SUFFIX}")
-endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
 
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
     set_target_properties(graphite2 PROPERTIES 
--- ./tests/comparerenderer/CMakeLists.txt.orig
+++ ./tests/comparerenderer/CMakeLists.txt
@@ -38,7 +38,7 @@ endif (${ICU_INCLUDE} STREQUAL "ICU_INCL
 #    set(HB1_LDFLAGS "-L${HB1_INCLUDE}/../../lib -lharfbuzz-1")
 #endif (${HB1_INCLUDE})
 
-if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
     find_package(Freetype)
     find_package(PkgConfig)
 
@@ -63,7 +63,7 @@ if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux
         set(GRAPHITE_LINK_FLAGS "-fsanitize=address")
     endif (GRAPHITE2_ASAN)
 
-endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
 
 if (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
 	find_path(GR_INCLUDE graphite/GrClient.h PATHS ENV SILGRAPHITE_HOME ${PROJECT_SOURCE_DIR}/../../../silgraphite-2.3.1 ${PROJECT_SOURCE_DIR}/../../../silgraphite-2.4.0 ${GRAPHITE_INSTALLED_PATH} ${PROJECT_SOURCE_DIR}/../../../graphite-trunk PATH_SUFFIXES engine/include include)
--- ./tests/examples/CMakeLists.txt.orig
+++ ./tests/examples/CMakeLists.txt
@@ -26,12 +26,12 @@ macro(test_example TESTNAME SRCFILE)
     set_tests_properties(${TESTNAME} PROPERTIES TIMEOUT 3)
 endmacro(test_example)
 
-if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
     find_package(Freetype)
     if (${FREETYPE_FOUND})
         include_directories(${FREETYPE_INCLUDE_DIRS})
     endif (${FREETYPE_FOUND})
-endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+endif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
 
 macro(test_freetype TESTNAME SRCFILE)
     if (${FREETYPE_FOUND})
--- ./tests/vm/CMakeLists.txt.orig
+++ ./tests/vm/CMakeLists.txt
@@ -38,12 +38,12 @@ if (GRAPHITE2_ASAN)
     set_target_properties(vm-test-call PROPERTIES LINK_FLAGS "-fsanitize=address")
 endif (GRAPHITE2_ASAN)
 
-if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
 	add_definitions(-fno-rtti -fno-exceptions)
 	if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
 		add_definitions(-DNDEBUG -fomit-frame-pointer)
 	endif ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
-endif  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
+endif  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" OR ${CMAKE_SYSTEM_NAME} MATCHES "k.*BSD" OR ${CMAKE_SYSTEM_NAME} STREQUAL "GNU" OR ${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
 
 add_test(vm-test-call-threading vm-test-call ${testing_SOURCE_DIR}/fonts/tiny.ttf 1)
 set_tests_properties(vm-test-call-threading PROPERTIES
