tHanks to OpenIndiana Userland for https://github.com/OpenIndiana/oi-userland/pull/3758 !

reworked for 4.10.x line 29


--- samba-4.10.4/source4/torture/local/wscript_build.orig	2019-06-15 20:19:47.271704510 +0200
+++ samba-4.10.4/source4/torture/local/wscript_build	2019-06-15 21:11:18.650979326 +0200
@@ -29,7 +29,7 @@
 	nss_tests.c
 	fsrvp_state.c'''
 
-TORTURE_LOCAL_DEPS = 'RPC_NDR_ECHO TDR LIBCLI_SMB MESSAGING iconv POPT_CREDENTIALS TORTURE_AUTH TORTURE_UTIL TORTURE_NDR TORTURE_LIBCRYPTO share torture_registry %s ldb samdb replace-test RPC_FSS_STATE util_str_escape' % provision
+TORTURE_LOCAL_DEPS = 'RPC_NDR_ECHO TDR LIBCLI_SMB MESSAGING POPT_CREDENTIALS TORTURE_AUTH TORTURE_UTIL TORTURE_NDR TORTURE_LIBCRYPTO share torture_registry %s ldb samdb replace-test RPC_FSS_STATE util_str_escape' % provision
 
 bld.SAMBA_MODULE('TORTURE_LOCAL',
 	source=TORTURE_LOCAL_SOURCE,
--- samba-4.9.4/lib/util/charset/wscript_configure.orig	2019-03-03 17:12:17.099079026 +0000
+++ samba-4.9.4/lib/util/charset/wscript_configure	2019-03-03 17:12:17.188158701 +0000
@@ -8,12 +8,10 @@
 # managed to link when specifying -liconv a executable even if there is no
 # libiconv.so or libiconv.a
 
-conf.CHECK_LIB(libs="iconv", shlib=True)
+# conf.CHECK_LIB(libs="iconv", shlib=True)
 
 #HP-UX can use libiconv as an add-on package, which has #define iconv_open libiconv_open
-if (conf.CHECK_FUNCS_IN('iconv_open', 'iconv', checklibc=False, headers='iconv.h') or
-    conf.CHECK_FUNCS_IN('libiconv_open', 'iconv', checklibc=False, headers='iconv.h') or 
-    conf.CHECK_FUNCS('iconv_open', headers='iconv.h')):
+if conf.CHECK_FUNCS('iconv_open', headers='iconv.h'):
     
     conf.DEFINE('HAVE_NATIVE_ICONV', 1)
 
--- samba-4.9.4/lib/replace/wscript.orig	2019-03-03 17:12:17.103100679 +0000
+++ samba-4.9.4/lib/replace/wscript	2019-03-03 17:12:17.188641008 +0000
@@ -472,14 +472,11 @@ def configure(conf):
         else:
             # Some hosts need lib iconv for linking with lib intl
             # So we try with flags just in case it helps.
-            oldflags = list(conf.env['EXTRA_LDFLAGS']);
-            conf.env['EXTRA_LDFLAGS'].extend(["-liconv"])
             conf.CHECK_FUNCS_IN('dgettext gettext bindtextdomain textdomain bind_textdomain_codeset',
                                 'intl', checklibc=False, headers='libintl.h')
-            conf.env['EXTRA_LDFLAGS'] = oldflags
             if conf.env['HAVE_GETTEXT'] and conf.env['HAVE_DGETTEXT']:
                 # save for dependency definitions
-                conf.env.intl_libs='iconv intl'
+                conf.env.intl_libs='intl'
 
     # did we find both prototypes and a library to link against?
     # if not, unset the detected values (see Bug #9911)
--- samba-4.9.4/source3/wscript.orig	2019-03-03 17:12:17.175640114 +0000
+++ samba-4.9.4/source3/wscript	2019-03-03 17:12:17.189210523 +0000
@@ -867,7 +867,7 @@ msg.msg_accrightslen = sizeof(fd);
 
     if Options.options.with_iconv:
         conf.env.with_iconv = True
-        if not conf.CHECK_FUNCS_IN('iconv_open', 'iconv', headers='iconv.h'):
+        if not conf.CHECK_FUNCS('iconv_open', headers='iconv.h'):
             conf.env.with_iconv = False
         if conf.env.with_iconv:
             conf.DEFINE('HAVE_ICONV', 1)
--- samba-4.9.4/source3/lib/messages_dgm.c.orig	2018-07-12 10:23:36.000000000 +0000
+++ samba-4.9.4/source3/lib/messages_dgm.c	2019-03-03 17:05:02.556144219 +0000
@@ -341,6 +341,11 @@ static ssize_t messaging_dgm_sendmsg(int
 {
 	struct msghdr msg;
 	ssize_t fdlen, ret;
+	int flags = 0;
+
+#ifdef MSG_NOSIGNAL
+	flags = MSG_NOSIGNAL;
+#endif
 
 	/*
 	 * Do the actual sendmsg syscall. This will be called from a
