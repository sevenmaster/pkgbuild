--- tmux-1.7/tmux.c	2012-10-11 09:51:06.000000000 -0700
+++ tmux-1.7-patched/tmux.c	2012-12-18 16:28:49.487676060 -0800
@@ -259,9 +259,11 @@
 			shell_cmd = xstrdup(optarg);
 			break;
 		case 'C':
+#ifndef __sun
 			if (flags & IDENTIFY_CONTROL)
 				flags |= IDENTIFY_TERMIOS;
 			else
+#endif
 				flags |= IDENTIFY_CONTROL;
 			break;
 		case 'V':
--- tmux-1.7/client.c	2012-10-11 09:51:06.000000000 -0700
+++ tmux-1.7-patched/client.c	2012-12-18 16:32:47.361798534 -0800
@@ -237,6 +237,7 @@
 	setblocking(STDIN_FILENO, 0);
 	event_set(&client_stdin, STDIN_FILENO, EV_READ|EV_PERSIST,
 	    client_stdin_callback, NULL);
+#ifndef __sun
 	if (flags & IDENTIFY_TERMIOS) {
 		if (tcgetattr(STDIN_FILENO, &saved_tio) != 0) {
 			fprintf(stderr, "tcgetattr failed: %s\n",
@@ -256,6 +257,7 @@
 		cfsetospeed(&tio, cfgetospeed(&saved_tio));
 		tcsetattr(STDIN_FILENO, TCSANOW, &tio);
 	}
+#endif
 
 	/* Establish signal handlers. */
 	set_signals(client_signal);
@@ -295,8 +297,11 @@
 		ppid = getppid();
 		if (client_exittype == MSG_DETACHKILL && ppid > 1)
 			kill(ppid, SIGHUP);
-	} else if (flags & IDENTIFY_TERMIOS)
+	} 
+#ifndef __sun
+	else if (flags & IDENTIFY_TERMIOS)
 		tcsetattr(STDOUT_FILENO, TCSAFLUSH, &saved_tio);
+#endif
 	setblocking(STDIN_FILENO, 1);
 	return (client_exitval);
 }
