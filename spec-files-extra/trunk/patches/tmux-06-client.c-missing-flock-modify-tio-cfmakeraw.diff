adopted from: https://java.net/projects/solaris-userland/sources/gate/content/components/tmux/patches/client.c.patch?rev=3564

#from orig patch In-House Patch. Submitted to upstream, but not accepted yet.
#from orig patch Check for flock(), which is available on BSD and not on Solaris. 
#from orig patch Instead use fnctl() on Solaris. Also check if cfmakeraw(), which
#from orig patch is not available on Solaris, so manually change the termios 
#from orig patch structure, the same way cfmakeraw does.

Patch needed to be re-worked as the source 1.8 -> 1.9 changed from 

--- tmux-1.9a/client.c.orig	2014-02-22 21:48:37.000000000 +0100
+++ tmux-1.9a/client.c	2014-12-20 14:45:57.426418104 +0100
@@ -75,16 +75,30 @@
 client_get_lock(char *lockfile)
 {
 	int lockfd;
+#ifdef F_SETLK
+        struct flock lock;
+#endif
 
 	if ((lockfd = open(lockfile, O_WRONLY|O_CREAT, 0600)) == -1)
 		fatal("open failed");
 
+#ifdef F_SETLK
+        if (fcntl(lockfd, F_SETLK, &lock) == -1 && errno == EAGAIN) {
+		while (fcntl(lockfd, F_SETLKW, &lock) == -1 && errno == EINTR)
+			/* nothing */;
+		close(lockfd);
+		return(-1);
+	}
+#elif LOCK_EX
 	if (lockf(lockfd, F_TLOCK, 0) == -1 && errno == EAGAIN) {
 		while (lockf(lockfd, F_LOCK, 0) == -1 && errno == EINTR)
 			/* nothing */;
 		close(lockfd);
 		return (-1);
 	}
+#else
+#error  "You need locking support."
+#endif
 
 	return (lockfd);
 }
@@ -262,7 +276,15 @@
 			    strerror(errno));
 			return (1);
 		}
-		cfmakeraw(&tio);
+#ifdef HAVE_CFMAKERAW
+                cfmakeraw(&tio);
+#else
+		tio.c_iflag &= ~(IMAXBEL|IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
+		tio.c_oflag &= ~OPOST;
+		tio.c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
+		tio.c_cflag &= ~(CSIZE|PARENB);
+	     	tio.c_cflag |= CS8;
+#endif
 		tio.c_iflag = ICRNL|IXANY;
 		tio.c_oflag = OPOST|ONLCR;
 #ifdef NOKERNINFO
