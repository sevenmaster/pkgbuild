--- xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu_os.c.solaris_support	2007-11-22 11:21:06.617711201 +0100
+++ xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu_os.c	2007-11-22 19:35:58.398897423 +0100
@@ -41,6 +41,10 @@
 cpuLoadData *data = NULL;
 int nrCpus = 0;
 
+int cpuLoadMon_getCpus() {
+	return nrCpus;
+}
+
 #if defined (__linux__)
 int cpuLoadMon_init()
 {
@@ -161,6 +165,112 @@
 /* TODO FreeBSD */
 /* TODO NetBSD */
 /* TODO OpenBSD */
+#elif defined (sun)
+/* 
+  For Solaris we need to get the cpu stats from kstat for each CPU.
+  We then return the average usage of all valid CPU's
+*/
+ 
+static kstat_ctl_t *kc=NULL;
+
+/*
+  With Solaris cpu's can be enable and disabled at any time. Some systems
+  the CPU's are hot-plugable. Therefore every time we need to check to see
+  if a change has been made, and adjust the data structure accordingly.
+*/
+
+static int last_ncpu=-1;
+
+int cpuLoadMon_init()
+{
+	/* Check if previously initalized */
+	if(data != NULL) return(-2);
+
+	/* Get number of cpu */	
+	nrCpus =  (int)sysconf(_SC_CPUID_MAX);
+	
+	/* Alloc storage for cpu data stuff */
+	data = (cpuLoadData *) calloc(nrCpus, sizeof(cpuLoadData));
+	if(data == NULL) return(-3);
+
+	return nrCpus;
+}
+
+void cpuLoadMon_free()
+{
+	/* free cpu data */
+	free(data);
+	data = NULL;
+
+	/* Reset values */
+	nrCpus = 0;	
+}
+
+/* Check if number of cpu didn't changed, if yes then reinitialize structures */
+int cpuLoadMon_check()
+{
+	if (nrCpus != (int) sysconf(_SC_CPUID_MAX)) {
+		cpuLoadMon_free();
+		cpuLoadMon_init();
+	}
+	return nrCpus;
+}
+
+cpuLoadData *cpuLoadMon_read()
+{
+	uint64_t total;
+    uint64_t busy;
+    uint64_t usage;
+	uint64_t kernel;
+	uint64_t idle;
+	uint64_t user;
+    int ncpu;
+    int i;
+
+	ncpu = cpuLoadMon_check();
+
+	if (kc==(kstat_ctl_t *)NULL){
+		kc = (kstat_ctl_t *)kstat_open();
+	}
+	for (i=0;i<ncpu;i++) {
+		kstat_t       *ksp;
+        kstat_named_t *knp;
+
+        ksp = kstat_lookup(kc, "cpu", i, "sys");
+
+		/* No CPU in this slot, then look at the next one */
+        if (p_online(i, P_STATUS)==-1) continue;
+
+        kstat_read(kc, ksp, NULL);
+		
+		knp = kstat_data_lookup(ksp, "cpu_ticks_idle");
+		idle = (uint64_t)knp->value.ui64;
+
+		knp = kstat_data_lookup(ksp, "cpu_ticks_kernel");
+		kernel = (uint64_t)knp->value.ui64;
+
+		knp = kstat_data_lookup(ksp, "cpu_ticks_user");
+		user = (uint64_t)knp->value.ui64;
+
+		/* busy = kernel + user */
+        busy = kernel + user;
+		/* total = busy + idle */
+		total = busy + idle;
+	
+		if((total - data[i].pTotal) != 0) {	
+			data[i].value = (float) (busy - data[i].pUsed) / 
+					    	(float)	(total - data[i].pTotal);
+		} 
+		else {
+			data[i].value = 0;
+		}
+		
+		data[i].pUsed = busy;
+		data[i].pTotal = total;
+	}
+	return data;
+}
+
 #else
 #error "Your're OS is not supported"
 #endif
--- xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu.c.solaris_support	2007-11-22 19:54:33.376481993 +0100
+++ xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu.c	2007-11-22 19:18:58.783698920 +0100
@@ -297,11 +297,12 @@
 UpdateCPU (CPUGraph * base)
 {
   gint i;
+  gint cpus = cpuLoadMon_getCpus();
   cpuLoadData *data = cpuLoadMon_read();
 
   base->m_CPUUsage = data[0].value * 100.0;
 
-  for(i=0; i<base->nrCores; i++){
+  for(i=0; i<cpus; i++){
     gtk_progress_bar_set_fraction(
                                   GTK_PROGRESS_BAR(base->m_pBar[i]),
                                   (gdouble)data[i+1].value);
@@ -579,7 +580,7 @@
     if(event->button == 1){
         GString *cmd;
         if (strlen(base->m_AssociateCommand) == 0) {
-            return;
+            return FALSE;
         }
         cmd = g_string_new (base->m_AssociateCommand);
         xfce_exec (cmd->str, FALSE, FALSE, NULL);
--- xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu_os.h.solaris_support	2007-11-22 19:10:47.213278848 +0100
+++ xfce4-cpugraph-plugin-0.4.0/panel-plugin/cpu_os.h	2007-11-22 19:48:26.870517191 +0100
@@ -26,6 +26,15 @@
 
 #define CPU_SCALE 1;/*00000*/
 
+#if defined (sun)
+#include <inttypes.h>
+#include <unistd.h>
+#include <stdlib.h>
+#include <kstat.h>
+#include <sys/types.h>
+#include <sys/processor.h>
+#endif
+
 extern int scaling_cur_freq;
 extern int scaling_max_freq;
 extern int scaling_min_freq;
@@ -43,4 +52,6 @@
 
 cpuLoadData *cpuLoadMon_read();
 
+int cpuLoadMon_getCpus();
+
 #endif /* _CPU_OS_H */
--- xfce4-cpugraph-plugin-0.4.0/configure.ac.solaris_support	2007-11-22 19:50:14.765844459 +0100
+++ xfce4-cpugraph-plugin-0.4.0/configure.ac	2007-11-22 19:51:40.092846366 +0100
@@ -38,6 +38,9 @@
 dnl Check for debugging support
 XDT_FEATURE_DEBUG()
 
+dnl Check for libkstat (Solaris)
+AC_CHECK_LIB(kstat, kstat_lookup)
+
 AC_OUTPUT([
 Makefile
 panel-plugin/Makefile
